<?php 
/**
 * @file
 *    Main functions for bunchball client side JS module. Send events to
 *    bunchball from client side JS.
 */

/**
 * Implement hook_view($node, $view_mode)
 */
function bunchball_nitro_node_view($node, $view_mode, $langcode) { 
  // make sure the user is currently viewing in full content mode
  if ($view_mode != 'full') {
    return;
  }
  
  drupal_add_js(array(
    'bunchball_nitro' => array(
        'node_id' => $node->nid,
        'node_uid' => $node->uid,
        'node_title' => filter_xss($node->title, array()),
        'node_cat' => $node->type,
        'node_type' => $node->type
        )
    ), 'setting');


  // initialize the JS
  _bunchball_nitro_initialize();
}

function bunchball_nitro_node_view_alter(&$build) {
  $build['#post_render'][] = '_bunchball_nitro_node_post_render';
}

function _bunchball_nitro_node_post_render($markup, $element) {

  drupal_add_js(array(
    'bunchball_nitro' => array(
      'artist_name' => isset($element['#node']) ? 
        filter_xss($element['#node']->title, array()) : 
        "N/A",
      'artist_cat' =>  isset($element['#node']) ? 
        $element['#node']->type : 
        "N/A"
    )
  ), 'setting');

  
  $markup = str_replace("feature=oembed", "feature=oembed&enablejsapi=1", $markup);
  return $markup;
}

/**
 * Initialize the JavaScript on the page
 */
function _bunchball_nitro_initialize() {
  // variable_get('bunchball_apikey',0); will get the API key from server side
  $api_key = variable_get('bunchball_apikey', '');
  
  if ($api_key == '') {
    watchdog('bunchball_nitro', 'API Key not set', array());
    return;
  }
  
  global $user;
  
  $environment = variable_get('bunchball_environment', 'sandbox');
  if (strlen($environment) == 0) {
    $endpoint_url = 'sandbox';
  }

  // change this so that debug mode is reflected in the environment.
  $in_debug_mode = ($environment == 'sandbox');
  
  // parse domain from the variables
  $endpoint_url = variable_get('bunchball_production_url', 'http://sandbox.bunchball.net/nitro/json');
  if (strlen($endpoint_url) == 0) {
    $endpoint_url = 'http://sandbox.bunchball.net/nitro/json';
  }
  
  $parsed_url = parse_url($endpoint_url);

  // default value for the customer subdomain
  $customer_subdomain = 'sandbox';
  if (isset ($parsed_url['host'])) {
    $exploded_domain = explode(".", $parsed_url['host']);
    
    if (count($exploded_domain) > 2) {
      array_pop($exploded_domain);
      array_pop($exploded_domain);
      
      $customer_subdomain = implode(".", $exploded_domain);
    }
  }

  // instantiate the variables for the JS
  $server_url = $in_debug_mode ? 
      'http://sandbox.bunchball.net/nitro/json' : 
      'http://' . $customer_subdomain . '.nitro.bunchball.net/nitro/json/';
  $user_id = $user->uid;
  $timestamp = time();
  $nitro = NitroAPI_Factory::getInstance();
  $signature = $nitro->getSignature();
  $debug = $in_debug_mode ? 'true' : 'false';
  
  // Build the Nitro Object in JS to be added at the bottom of the file.
  $embedded_js = <<<EOD
var connectionParams={};
connectionParams.apiKey = "$api_key";
connectionParams.server = "$server_url";
connectionParams.timeStamp = "$timestamp";
connectionParams.signature = "$signature";
EOD;

  // if the user is logged in....
  if ($user_id > 0) {
    $embedded_js .= <<<EOD

connectionParams.userId = escape("$user_id");
EOD;
    
  }
  
  $embedded_js .= <<<EOD

connectionParams.debug = $debug;

var nitro = new Nitro(connectionParams);

EOD;
  
  // To include nitro.js, first put the following code into your HTML page as a 
  // direct child of the <body> element or after the </body> tag.
  $nitro_js_url = "http://assets.bunchball.net/scripts/nitro/current/nitro.js";
  drupal_add_js($nitro_js_url, array(
      'type' => 'external',
      'weight' => -10,
      'scope' => 'footer'
  ));

  drupal_add_js($embedded_js, array(
      'type' => 'inline',
      'weight' => -9,
      'scope' => 'footer'
  ));
  
  // add jQuery functions file
  drupal_add_js(
      drupal_get_path('module', 'bunchball_nitro') . '/bunchball_nitro.js'
  );
}